Query(
  Lambda(
    ["startTime", "indexName", "interval", "size", "after", "before"],
    Let(
      {
        match: Match(Index(Var("indexName"))),
        endTime: ToMicros(
          TimeAdd(
            Epoch(Var("startTime"), "microseconds"),
            Var("interval"),
            "minutes"
          )
        ),
        page: If(
          Equals(Var("before"), null),
          If(
            Equals(Var("after"), null),
            Paginate(Range(Var("match"), Var("startTime"), []), {
              size: Var("size")
            }),
            Paginate(Range(Var("match"), Var("startTime"), []), {
              after: Var("after"),
              size: Var("size")
            })
          ),
          Paginate(Range(Var("match"), Var("startTime"), []), {
            before: Var("before"),
            size: Var("size")
          })
        ),
        refs: Map(Var("page"), Lambda(["t", "r"], Var("r"))),
        eventList: Map(
          Var("refs"),
          Lambda("e", Paginate(Events(Var("e")), { size: 100000 }))
        ),
        recent: Map(
          Var("eventList"),
          Lambda(
            "el",
            Filter(
              Var("el"),
              Lambda(
                "t",
                And(
                  LTE(Var("startTime"), Select("ts", Var("t"))),
                  GT(Var("endTime"), Select("ts", Var("t")))
                )
              )
            )
          )
        ),
        filtered: Filter(Var("recent"), Lambda("el", IsNonEmpty(Var("el"))))
      },
      Map(
        Var("filtered"),
        Lambda(
          "res",
          Map(
            Var("res"),
            Lambda("event", {
              ts: Select("ts", Var("event")),
              doc: Select("document", Var("event")),
              action: Select("action", Var("event")),
              data: Select("data", Var("event"))
            })
          )
        )
      )
    )
  )
)
